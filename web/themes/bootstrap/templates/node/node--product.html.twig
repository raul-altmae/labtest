{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
  node.bundle|clean_class,
  node.isPromoted() ? 'is-promoted',
  node.isSticky() ? 'is-sticky',
  not node.isPublished() ? 'is-unpublished',
  view_mode ? view_mode|clean_class,
  'clearfix',
]
%}
<article{{ attributes.addClass(classes) }}>

  {{ title_prefix }}
  {% if label and not page %}
    <h2{{ title_attributes }}>
      <a href="{{ url }}" rel="bookmark">{{ label }}</a>
    </h2>
  {% endif %}
  {{ title_suffix }}

  <div{{ content_attributes.addClass('content') }}>
    {{ content }}
    <div class="form-item js-form-item form-wrapper js-form-wrapper panel panel-default" id="bootstrap-panel">
      <div class="panel-heading">
        <div class="panel-title">Calculations</div>
      </div>
      <div class="panel-body">
        <div class="field field--name-cbmctn field--type-float field--label-inline">
          <div class="field--label">CBM/CTN</div>
          <div class="field--item">{{ cbm_ctn }}</div>
        </div>
        <div class="field field--name-cbmpcs field--type-float field--label-inline">
          <div class="field--label">CBM/UNIT</div>
          <div class="field--item">{{ cbm_unit }}</div>
        </div>
      </div>
    </div>
  </div>
  <h2>Last 10 PO-s</h2>
  <a id="update-price" class="btn btn-primary" href="?update=sage">Update</a>
  <table class="product_table table table-bordered table-hover table-striped">
    <thead>
    <tr>
      <th>Order number</th>
      <th>Product</th>
      <th>Price</th>
      <th>Currency</th>
      <th>Date</th>
    </tr>
    </thead>
    <tbody>
    {% for sub_array in po_array %}
      <tr>
        {% for value in sub_array %}
          <td>{{ value }}</th>
        {% endfor %}
      </tr>
    {% endfor %}
    </tbody>
  </table>
  {% if po_array != null %}
  <div id="chart"></div>
  {% endif %}
</article>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    (function() {
      Highcharts.chart('chart', {
        legend: {
          align: 'left',
          itemStyle: {"color": "#595959", "fontSize": "16px", "fontWeight": "normal", "textOverflow": "ellipsis"}
        },
        chart: {
          type: 'line'
        },
        title: {
          text: 'Last 10 po chart'
        },
        xAxis: {
          categories: {{ chart_data.x_axis|json_encode|raw }}
        },
        legend: {
          layout: 'vertical',
          floating: true,
          backgroundColor: '#FFFFFF',
          align: 'right',
          verticalAlign: 'top',
          y: 60,
          x: -60
        },
        tooltip: {
          headerFormat: '<b>{point.key}</b><br/>',
          pointFormat: '{point.y} {{ chart_data.unit }}'
        },
        time: {
          timezone: 'Europe/Tallinn'
        },
        yAxis: {
          title: {
            align: 'high',
            textAlign: 'left',
            offset: 0,
            text: '',
            rotation: 0,
            y: -10
          },
        },
        series: [{
          name: 'Price',
          data: {{ chart_data.y_axis|json_encode|raw }}
        }]
      });
    })()
  });
</script>
